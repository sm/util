#!/usr/bin/env zsh

if ! command -v go > /dev/null 2>&1
then 
	echo "Be sure to run bin/prepare first after installing go from source and "\
		"adding to your path."
	exit 1
fi

if ! command -v git > /dev/null 2>&1
then
	echo "Please install git (http://git-scm.com) and add it to your path first."
	exit 1
fi

typeset tag tag_desc
tag=$1
if [[ -z ${tag} ]]
then
	echo "A git tag must be given as the first argument."
	exit 1
fi
shift

tag_desc=$*
if [[ -z ${tag_desc} ]]
then
	echo "A git tag description must be given after the tag name."
	exit 1
fi

platforms=(
	"darwin 386"
	"darwin amd64"
	"freebsd 386"
	"freebsd amd64"
	"linux 386"
	"linux amd64"
	"linux arm"
	"windows 386"
	"windows amd64"
)

# Make sure releases_path is set or set to the CWD
true ${releases_path:=$PWD} ${repo_path:=$PWD}
mkdir -p ${releases_path}/releases/ ${releases_path}/releases/archives/

cd ${repo_path}
git tag -a "${tag}" -m "${tag_desc}"

for platform in ${platforms[@]}
do
	rm -f util util.exe
	export GOARM=7 GOARCH=${platform//* } GOOS=${platform// *}

	cd ${repo_path}
	echo -e "\n=> Building sm-util ${tag} release for os: ${GOOS}, arch: ${GOARCH}"
	if go build
	then
		mkdir -p ${releases_path}/releases/${GOOS}/${GOARCH}/${tag}
		case $GOOS in
			(windows) name="util.exe" ;;
			(*) name="util" ;;
		esac

		mv ${name} ${releases_path}/releases/${GOOS}/${GOARCH}/${tag}/sm-${name}
		(
		cd ${releases_path}/releases/${GOOS}/${GOARCH}/${tag}
		echo "=> Prepairing archives for sm-util ${tag} on ${GOOS} ${GOARCH}"
		echo "=> xz..."
		cat sm-${name} | xz -9 -e - > sm-util.xz
		echo "=> gz..."
		cat sm-${name} | gzip -9 - > sm-util.gz
		echo "=> bz2..."
		cat sm-${name} | bzip2 -9 - > sm-util.bz2
		echo "=> zip..."
		cat sm-${name} | zip -9 sm-util -

		echo "=> Copying into ${releases_path}/archives/"
		for ext in xz gz bz2 zip
		do 
			cp ${releases_path}/releases/${GOOS}/${GOARCH}/${tag}/sm-util.${ext} \
				"${releases_path}/releases/archives/sm-util-${tag}-${GOOS}-${GOARCH}.${ext}"
		done
		)
	else
		echo "!> Error building sm-util ${tag} release for os: ${GOOS}, arch: ${GOARCH}"\
			"Did you run bin/prepare first?"
	fi
done
unset GOARCH GOOS
